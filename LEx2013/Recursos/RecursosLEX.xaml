<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:viewModels="clr-namespace:MewZik.ViewModels"
                    xmlns:views="clr-namespace:MewZik.Views"
                    xmlns:utils="clr-namespace:MewZik.Utils">

    <!-- Estilos Predeterminados -->
    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
        <Style.Setters>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="5"/>
        </Style.Setters>
    </Style>

    <Style BasedOn="{StaticResource {x:Type Label}}" TargetType="Label">
        <Style.Setters>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="Foreground" Value="Orange"/>
        </Style.Setters>
    </Style>


    <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
        <Style.Setters>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="25"/>
        </Style.Setters>
    </Style>


    <!-- Asociaciones vistas con viewmodels -->
    <DataTemplate DataType="{x:Type viewModels:VMNombreCancion}">
        <views:NombreCancion/>
    </DataTemplate>


    <!-- Toggle Buttons -->
    <!-- Brushes for colours/backgrounds -->
    <SolidColorBrush x:Key="FontBrush" Color="#DDDDDD"/>

    <LinearGradientBrush x:Key="BgBrush1" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#888888"/>
        <GradientStop Offset="1" Color="#222222"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="BorderBrush1" Color="#333333"/>
    <LinearGradientBrush x:Key="CheckedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#555555"/>
        <GradientStop Offset="1" Color="#111111"/>
    </LinearGradientBrush>

    <!-- Left Button Template -->
    <ControlTemplate x:Key="ToggleButtonLeft" TargetType="{x:Type ToggleButton}">
        <Border
                Name="Border"
                Background="{StaticResource BgBrush1}"
                BorderBrush="{StaticResource BorderBrush1}"
                BorderThickness="1"
                CornerRadius="5,0,0,5">
            <ContentPresenter
                    HorizontalAlignment="Center"
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Content}"
                    TextBlock.FontWeight="Bold"
                    TextBlock.Foreground="{StaticResource FontBrush}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource CheckedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Middle Button(s) Template -->
    <ControlTemplate x:Key="ToggleButtonMid" TargetType="{x:Type ToggleButton}">
        <Border
                Name="Border" Padding="15,5"
                Background="{StaticResource BgBrush1}"
                BorderBrush="{StaticResource BorderBrush1}"
                BorderThickness="0,1,0,1"
                CornerRadius="0">
            <ContentPresenter
                    HorizontalAlignment="Center"
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Content}"
                    TextBlock.FontWeight="Bold"
                    TextBlock.Foreground="{StaticResource FontBrush}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource CheckedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Right Button Template -->
    <ControlTemplate x:Key="ToggleButtonRight" TargetType="{x:Type ToggleButton}">
        <Border
                Name="Border"
                Background="{StaticResource BgBrush1}"
                BorderBrush="{StaticResource BorderBrush1}"
                BorderThickness="1"
                CornerRadius="0, 5, 5, 0">
            <ContentPresenter
                    HorizontalAlignment="Center"
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Content}"
                    TextBlock.FontWeight="Bold"
                    TextBlock.Foreground="{StaticResource FontBrush}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource CheckedBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!-- RadioButton Metro -->
    <ControlTemplate TargetType="RadioButton" x:Key="MetroRadioButton">
        <Border x:Name="Border"
                            Margin="{TemplateBinding Padding}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter x:Name="ContentSite"
                                          Margin="2,1,2,1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.FontSize="{TemplateBinding controls:ControlsHelper.HeaderFontSize}"
                                          TextElement.FontStretch="{TemplateBinding controls:ControlsHelper.HeaderFontStretch}"
                                          TextElement.FontWeight="{TemplateBinding controls:ControlsHelper.HeaderFontWeight}"
                                          TextElement.Foreground="{TemplateBinding Foreground}"
                                          RecognizesAccessKey="True" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                                 Value="True">
                <Setter Property="Foreground"
                                    Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <Trigger Property="IsChecked"
                                 Value="False">
                <Setter Property="Foreground"
                                    Value="{DynamicResource GrayNormalBrush}" />
            </Trigger>
            <Trigger SourceName="ContentSite"
                                 Property="IsMouseOver"
                                 Value="True">
                <Setter Property="Foreground"
                                    Value="{DynamicResource GrayHoverBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>
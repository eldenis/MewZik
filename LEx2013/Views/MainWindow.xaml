<controls:MetroWindow x:Class="MewZik.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:viewModels="clr-namespace:MewZik.ViewModels"
        xmlns:utils="clr-namespace:MewZik.Utils"
        xmlns:views="clr-namespace:MewZik.Views"
        WindowStartupLocation="CenterScreen" 
        WindowState="Maximized"  Height="600" Width="880" Icon="/Recursos\WHITEIcono-Mz.ico">
    <Window.InputBindings>
        <KeyBinding Key="F1" Command="{Binding SeleccionarFuenteLetras}"/>
        <KeyBinding Key="F2" Command="{Binding SeleccionarFuenteAcordes}"/>
        <KeyBinding Key="F3" Command="{Binding AbrirCancionAnterior}"/>
        <KeyBinding Key="F4" Command="{Binding AbrirSiguienteCancion}"/>
        <KeyBinding Key="F5" Command="{Binding EstablecerFocoBuscar}"/>
        <KeyBinding Key="F6" Command="{Binding EstablecerFocoLista}"/>
        <KeyBinding Key="F7" Command="{Binding EstablecerFocoTexto}"/>
        <KeyBinding Key="F8" Command="{Binding GuardarCancion}"/>
        <KeyBinding Key="F12" Command="{Binding AbrirPrimeraCancion}"/>
    </Window.InputBindings>
    <Window.DataContext>
        <viewModels:VMPrincipal/>
    </Window.DataContext>
    <Grid>
        <Grid x:Name="GridPrincipal">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Setters>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <BlurEffect Radius="5" KernelType="Gaussian"/>
                            </Setter.Value>
                        </Setter>
                    </Style.Setters>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Dialogo}" Value="{x:Null}">
                            <DataTrigger.Setters>
                                <Setter Property="Effect" Value="{x:Null}"/>
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Border Grid.ColumnSpan="3"  BorderThickness="0,0,0,1">
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="1,1" MappingMode="RelativeToBoundingBox" StartPoint="0,0">
                        <GradientStop Color="White" Offset="0.5"/>
                        <GradientStop Color="#FF1E1E1E" Offset="1"/>
                        <GradientStop Color="#FF1E1E1E"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel HorizontalAlignment="Left">
                        <RadioButton Content="Letras" Template="{StaticResource MetroRadioButton}" 
                                     IsEnabled="{Binding TieneFuenteLetras}" GroupName="TipoFuente"
                                     IsChecked="{Binding FuenteLetras,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <RadioButton Content="Acordes" Template="{StaticResource MetroRadioButton}" 
                                     IsEnabled="{Binding TieneFuenteAcordes}" GroupName="TipoFuente"
                                     IsChecked="{Binding FuenteAcordes,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DockPanel>

                    <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                        <views:ImagedCircleButton Visual="{DynamicResource appbar_add}" Command="{Binding AgregarCancion}"/>
                        <views:ImagedCircleButton Visual="{DynamicResource appbar_save}" Command="{Binding GuardarCancion}"/>
                        <views:ImagedCircleButton Visual="{DynamicResource appbar_delete}" Command="{Binding EliminarCancionLeida}"/>
                        <views:ImagedCircleButton Visual="{DynamicResource appbar_door_leave}" Command="{Binding Salir}"/>
                    </StackPanel>
                    <TextBox Grid.Column="2" HorizontalAlignment="Right"
                        Padding="0,5" controls:TextboxHelper.ClearTextButton="True" Width="270"
                                 controls:TextboxHelper.Watermark="Buscar canciones..."
                                  utils:AttachedProperties.TieneFoco="{Binding FocoEnBuscar}"
                                  Text="{Binding Filtro,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </Border>


            <ListBox ScrollViewer.HorizontalScrollBarVisibility="Disabled" IsSynchronizedWithCurrentItem="True"
                      Background="#FF1E1E1E" Grid.Column="0"  SelectionChanged="ListaArchivos_SelectionChanged"
                     utils:AttachedProperties.TieneFoco="{Binding FocoEnLista}"
                     utils:AttachedProperties.ReturnToStartProperty="{Binding LimpiarEstadoLista}"
                     SelectedItem="{Binding CancionSeleccionada,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                     ItemsSource="{Binding ListaCanciones}" x:Name="ListaArchivos" Grid.Row="1">
                <ListBox.InputBindings>
                    <KeyBinding Key="Return" Command="{Binding DataContext.AbrirCancionSeleccionada,
                                    RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                </ListBox.InputBindings>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <!--Quita líneas punteadas cuando se mueve entre los ítemes con el teclado-->
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                        <!--Extiende el contenido del ListBoxItem para obtener foco del mouse fuera del TextBlock-->
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Abrir en notepad" Command="{Binding AbrirNotepad}"/>
                        <MenuItem Header="Localizar en explorer" Command="{Binding LocalizarExplorer}"/>
                        <MenuItem Header="Abrir en word" Command="{Binding AbrirWord}"/>
                        <Separator/>
                        <MenuItem Header="Agregar canción" Command="{Binding AgregarCancion}"/>
                        <MenuItem Header="Eliminar canción" Command="{Binding EliminarCancion}"/>
                        <MenuItem Header="Cambiar nombre" Command="{Binding CambiarNombre}"/>
                        <MenuItem Header="Duplicar canción" Command="{Binding DuplicarCancion}"/>
                    </ContextMenu>
                </ListBox.ContextMenu>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Nombre}" Padding="0" Margin="0"   
                               HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <TextBlock.InputBindings>
                                <MouseBinding MouseAction="LeftDoubleClick"
                                    Command="{Binding DataContext.AbrirCancionSeleccionada,
                                    RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                            </TextBlock.InputBindings>
                        </TextBlock>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>


            <GridSplitter Width="3" HorizontalAlignment="Center" Grid.Row="1"
                      VerticalAlignment="Stretch" Grid.Column="1" 
                      ResizeDirection="Columns" ShowsPreview="True">
                <GridSplitter.Background>
                    <LinearGradientBrush EndPoint="1,1" MappingMode="RelativeToBoundingBox" StartPoint="0,0">
                        <GradientStop Color="White" Offset="0.5"/>
                        <GradientStop Color="#FF1E1E1E" Offset="1"/>
                        <GradientStop Color="#FF1E1E1E"/>
                    </LinearGradientBrush>
                </GridSplitter.Background>
                <GridSplitter.Style>
                    <Style TargetType="{x:Type GridSplitter}">
                        <Style.Setters>
                            <Setter Property="Opacity" Value="0.2"/>
                        </Style.Setters>
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="HoldEnd">
                                        <DoubleAnimation Duration="0:0:1" Storyboard.TargetProperty="Opacity" From="0.2" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard >
                                        <DoubleAnimation Duration="0:0:1" Storyboard.TargetProperty="Opacity" From="1" To="0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="MouseDown">
                                <BeginStoryboard>
                                    <Storyboard >
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </GridSplitter.Style>
            </GridSplitter>


            <TextBox PreviewMouseWheel="TextBoxMouseWheel" x:Name="TextoCancion" BorderBrush="{x:Null}"
                 Grid.Column="2" FontFamily="Courier New" Grid.Row="1" AcceptsReturn="True"
                     FontSize="16"
                     utils:AttachedProperties.TieneFoco="{Binding FocoEnTexto}"
                 ScrollViewer.VerticalScrollBarVisibility="Visible" TextWrapping="Wrap"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled" Margin="0"
                 utils:AttachedProperties.ReturnToStartProperty="{Binding LimpiarEstadoTexto}"
                 Text="{Binding Texto,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                <TextBox.Template>
                    <!--Esta parte quita el borde blanco que sale en MouseOver y en GotFocus en los TextBoxes-->
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="bg" BorderBrush="{x:Null}" Background="#FF1E1E1E">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </TextBox.Template>
            </TextBox>
        </Grid>

        <!-- Mensajitos temporales-->
        <Grid>
            <TextBlock Text="{Binding MensajeTemporal}" x:Name="TextoTemporal" Focusable="False"
                       IsHitTestVisible="False"
                       VerticalAlignment="Center" HorizontalAlignment="Center">
                <TextBlock.Style>
                    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MostrandoMensajeTemporal}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:2" To="1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:2" To="0.0"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:2" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>


        <!-- Diálogo -->
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Dialogo}"  Value="{x:Null}">
                            <DataTrigger.Setters>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <Grid Background="Black" Opacity="0.5"/>
            <ContentPresenter Content="{Binding Dialogo}"/>
        </Grid>
    </Grid>
</controls:MetroWindow>
